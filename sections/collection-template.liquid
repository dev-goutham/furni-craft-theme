<section class='collection-template'>
  <div class='banner'>
    {% if section.settings.banner != blank %}
      <img
        src='{{section.settings.banner | img_url: 'master'}}'
        alt='{{section.settings.banner.alt}}'
      >
    {% else %}
      {{ 'lifestyle-2' | placeholder_svg_tag: 'placeholder' }}
    {% endif %}
  </div>
  <div class='collection container'>
    <div class='details'>
      <h2>
        {{ collection.title }}
      </h2>
      <p>
        {{ collection.description }}
      </p>
      <hr>
      <div class='sort'>
        <h4>Sort</h4>
        <p class='low-high'>price, $-$$$</p>
        <p class='high-low'>price, $$$-$</p>
      </div>
    </div>
    <div class='collection-grid'>
      {% for product in collection.products %}
        {% render 'product-card', product: product %}
      {% endfor %}
    </div>
  </div>
</section>

<script>
  const lowToHigh = document.querySelector('.low-high');
  const highToLow = document.querySelector('.high-low');

  function setActiveClass() {
    if (window.location.href.includes('price-ascending')) {
      highToLow.classList.remove('active');
      lowToHigh.classList.add('active');
    } else if (window.location.href.includes('price-descending')) {
      lowToHigh.classList.remove('active');
      highToLow.classList.add('active');
    }
  }

  const getCollection = async (sortBy) => {
    const res = await (
      await fetch(`/collections/{{collection.handle}}?sort_by=${sortBy}`)
    ).text();
    const html = new DOMParser().parseFromString(res, 'text/html');
    const collectionGrid = document.querySelector('.collection-grid');
    const newGrid = html.querySelector('.collection-grid').innerHTML;
    collectionGrid.innerHTML = newGrid;
    const selector = document.querySelector('currency-component');
    selector.setConvertedCurrency();
  };

  lowToHigh.addEventListener('click', () => {
    getCollection('price-ascending');
    window.history.replaceState(
      {},
      '',
      window.location.href.split('?')[0] + '?sort_by=price-ascending',
    );
    setActiveClass();
  });
  highToLow.addEventListener('click', () => {
    getCollection('price-descending');
    window.history.replaceState(
      {},
      '',
      window.location.href.split('?')[0] + '?sort_by=price-descending',
    );
    setActiveClass();
  });
  setActiveClass();
</script>

{% schema %}
{
  "name": "Collection template",
  "settings": [
    {
      "type": "image_picker",
      "id": "banner",
      "label": "Banner"
    }
  ]
}
{% endschema %}
